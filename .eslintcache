[{"/home/abdullahj/full_stack/taskroom/src/index.js":"1","/home/abdullahj/full_stack/taskroom/src/App.js":"2","/home/abdullahj/full_stack/taskroom/src/reportWebVitals.js":"3","/home/abdullahj/full_stack/taskroom/src/services/authService.js":"4","/home/abdullahj/full_stack/taskroom/src/contexts/loginContext.js":"5","/home/abdullahj/full_stack/taskroom/src/components/common/protectedRoute.jsx":"6","/home/abdullahj/full_stack/taskroom/src/services/httpService.js":"7","/home/abdullahj/full_stack/taskroom/src/services/userService.js":"8","/home/abdullahj/full_stack/taskroom/src/services/groupService.js":"9","/home/abdullahj/full_stack/taskroom/src/utils/paginate.js":"10","/home/abdullahj/full_stack/taskroom/src/components/common/form.jsx":"11","/home/abdullahj/full_stack/taskroom/src/components/common/pagination.jsx":"12","/home/abdullahj/full_stack/taskroom/src/components/common/searchBox.jsx":"13","/home/abdullahj/full_stack/taskroom/src/services/logService.js":"14","/home/abdullahj/full_stack/taskroom/src/components/common/input.jsx":"15","/home/abdullahj/full_stack/taskroom/src/components/common/select.jsx":"16","/home/abdullahj/full_stack/taskroom/src/components/common/table.jsx":"17","/home/abdullahj/full_stack/taskroom/src/components/common/tableHeader.jsx":"18","/home/abdullahj/full_stack/taskroom/src/components/common/tableBody.jsx":"19","/home/abdullahj/full_stack/taskroom/src/components/common/list.jsx":"20","/home/abdullahj/full_stack/taskroom/src/components/footer.jsx":"21","/home/abdullahj/full_stack/taskroom/src/services/taskService.js":"22","/home/abdullahj/full_stack/taskroom/src/services/commentService.js":"23","/home/abdullahj/full_stack/taskroom/src/components/loadingScreen.jsx":"24","/home/abdullahj/full_stack/taskroom/src/components/auth/loginModal.jsx":"25","/home/abdullahj/full_stack/taskroom/src/components/common/notFound.jsx":"26","/home/abdullahj/full_stack/taskroom/src/components/group/groups.jsx":"27","/home/abdullahj/full_stack/taskroom/src/components/task/task.jsx":"28","/home/abdullahj/full_stack/taskroom/src/components/group/groupForm.jsx":"29","/home/abdullahj/full_stack/taskroom/src/components/group/groupView.jsx":"30","/home/abdullahj/full_stack/taskroom/src/components/auth/resetPassword.jsx":"31","/home/abdullahj/full_stack/taskroom/src/components/auth/logout.jsx":"32","/home/abdullahj/full_stack/taskroom/src/components/auth/resetPasswordChange.jsx":"33","/home/abdullahj/full_stack/taskroom/src/components/auth/registerForm.jsx":"34","/home/abdullahj/full_stack/taskroom/src/components/group/groupHeader.jsx":"35","/home/abdullahj/full_stack/taskroom/src/components/task/taskTab.jsx":"36","/home/abdullahj/full_stack/taskroom/src/components/task/tasks.jsx":"37","/home/abdullahj/full_stack/taskroom/src/components/comment/commentContainer.jsx":"38","/home/abdullahj/full_stack/taskroom/src/components/common/oauth.jsx":"39","/home/abdullahj/full_stack/taskroom/src/components/navBar.jsx":"40","/home/abdullahj/full_stack/taskroom/src/components/group/GroupCard.jsx":"41","/home/abdullahj/full_stack/taskroom/src/components/profile/profileDialog.jsx":"42","/home/abdullahj/full_stack/taskroom/src/components/auth/callback.jsx":"43","/home/abdullahj/full_stack/taskroom/src/components/task/taskColumns.jsx":"44","/home/abdullahj/full_stack/taskroom/src/components/task/taskForm.jsx":"45","/home/abdullahj/full_stack/taskroom/src/components/task/taskCard.jsx":"46","/home/abdullahj/full_stack/taskroom/src/components/task/timeline.jsx":"47","/home/abdullahj/full_stack/taskroom/src/components/task/taskCardDetailed.jsx":"48","/home/abdullahj/full_stack/taskroom/src/components/group/groupTabs.jsx":"49","/home/abdullahj/full_stack/taskroom/src/components/task/workflow.jsx":"50","/home/abdullahj/full_stack/taskroom/src/components/drawer.jsx":"51","/home/abdullahj/full_stack/taskroom/src/components/comment/messages.jsx":"52","/home/abdullahj/full_stack/taskroom/src/components/comment/messageForm.jsx":"53"},{"size":664,"mtime":1624635306000,"results":"54","hashOfConfig":"55"},{"size":3247,"mtime":1625480075000,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1614219727000,"results":"57","hashOfConfig":"55"},{"size":1255,"mtime":1624369908000,"results":"58","hashOfConfig":"55"},{"size":97,"mtime":1614219727000,"results":"59","hashOfConfig":"55"},{"size":625,"mtime":1621577627000,"results":"60","hashOfConfig":"55"},{"size":691,"mtime":1624367192000,"results":"61","hashOfConfig":"55"},{"size":846,"mtime":1624635823000,"results":"62","hashOfConfig":"55"},{"size":952,"mtime":1624527339000,"results":"63","hashOfConfig":"55"},{"size":198,"mtime":1614219727000,"results":"64","hashOfConfig":"55"},{"size":2122,"mtime":1624520907000,"results":"65","hashOfConfig":"55"},{"size":1062,"mtime":1614414040000,"results":"66","hashOfConfig":"55"},{"size":316,"mtime":1614219727000,"results":"67","hashOfConfig":"55"},{"size":648,"mtime":1614219727000,"results":"68","hashOfConfig":"55"},{"size":776,"mtime":1614323495000,"results":"69","hashOfConfig":"55"},{"size":550,"mtime":1614236777000,"results":"70","hashOfConfig":"55"},{"size":380,"mtime":1614219727578,"results":"71","hashOfConfig":"72"},{"size":1140,"mtime":1614219727582,"results":"73","hashOfConfig":"72"},{"size":731,"mtime":1614219727580,"results":"74","hashOfConfig":"72"},{"size":481,"mtime":1624372181163,"results":"75","hashOfConfig":"72"},{"size":273,"mtime":1621650900000,"results":"76","hashOfConfig":"55"},{"size":941,"mtime":1625815674154,"results":"77","hashOfConfig":"55"},{"size":444,"mtime":1625491074000,"results":"78","hashOfConfig":"55"},{"size":492,"mtime":1621689764000,"results":"79","hashOfConfig":"55"},{"size":2769,"mtime":1624591613000,"results":"80","hashOfConfig":"55"},{"size":110,"mtime":1624353245000,"results":"81","hashOfConfig":"55"},{"size":4090,"mtime":1625490218000,"results":"82","hashOfConfig":"55"},{"size":7641,"mtime":1625819158264,"results":"83","hashOfConfig":"55"},{"size":4423,"mtime":1624591233000,"results":"84","hashOfConfig":"55"},{"size":1049,"mtime":1625840323611,"results":"85","hashOfConfig":"55"},{"size":1469,"mtime":1624367319000,"results":"86","hashOfConfig":"55"},{"size":257,"mtime":1624354015000,"results":"87","hashOfConfig":"55"},{"size":2161,"mtime":1624369074000,"results":"88","hashOfConfig":"55"},{"size":2229,"mtime":1624367064000,"results":"89","hashOfConfig":"55"},{"size":6807,"mtime":1625842491488,"results":"90","hashOfConfig":"55"},{"size":752,"mtime":1624353312033,"results":"91","hashOfConfig":"92"},{"size":5026,"mtime":1624412455000,"results":"93","hashOfConfig":"55"},{"size":1843,"mtime":1625572600000,"results":"94","hashOfConfig":"55"},{"size":521,"mtime":1625294991000,"results":"95","hashOfConfig":"55"},{"size":3434,"mtime":1625842457528,"results":"96","hashOfConfig":"55"},{"size":4498,"mtime":1625845067459,"results":"97","hashOfConfig":"55"},{"size":7940,"mtime":1625318575000,"results":"98","hashOfConfig":"55"},{"size":531,"mtime":1625300560000,"results":"99","hashOfConfig":"55"},{"size":3492,"mtime":1625452895000,"results":"100","hashOfConfig":"55"},{"size":7570,"mtime":1625494779000,"results":"101","hashOfConfig":"55"},{"size":4639,"mtime":1625845196009,"results":"102","hashOfConfig":"55"},{"size":4321,"mtime":1625498928000,"results":"103","hashOfConfig":"55"},{"size":5899,"mtime":1625536641000,"results":"104","hashOfConfig":"55"},{"size":4619,"mtime":1625840340061,"results":"105","hashOfConfig":"55"},{"size":1634,"mtime":1625840245671,"results":"106","hashOfConfig":"55"},{"size":2850,"mtime":1625838158071,"results":"107","hashOfConfig":"55"},{"size":2425,"mtime":1625572471000,"results":"108","hashOfConfig":"55"},{"size":1602,"mtime":1625494729000,"results":"109","hashOfConfig":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"i5re21",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"1wg5b35",{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mmsq0u",{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"112"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"112"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"112"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"112"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"112"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"112"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"112"},"/home/abdullahj/full_stack/taskroom/src/index.js",[],["255","256"],"/home/abdullahj/full_stack/taskroom/src/App.js",["257","258"],"import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\n\nimport ProtectedRoute from './components/common/protectedRoute';\nimport NotFound from \"./components/common/notFound\";\nimport Groups from './components/group/groups';\nimport GroupView from './components/group/groupView';\nimport GroupForm from \"./components/group/groupForm\";\nimport GroupTabs from './components/group/groupTabs';\n\nimport LoginModal from \"./components/auth/loginModal\";\nimport RegisterForm from './components/auth/registerForm';\nimport Logout from './components/auth/logout';\nimport ResetPassword from './components/auth/resetPassword';\nimport ResetPasswordChange from './components/auth/resetPasswordChange';\n\nimport NavBar from \"./components/navBar\";\nimport auth from './services/authService';\nimport LoginContext from './contexts/loginContext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./App.css\";\nimport Footer from './components/footer';\nimport Task from './components/task/task';\nimport OauthCallback from './components/auth/callback';\n\nclass App extends Component {\n  state = {\n    user: \"\",\n    show: \"false\",\n    modalMessage: \"\"\n  };\n\n  handleClose = () => this.setState({ show: false, modalMessage: \"\" });\n  handleShow = () => this.setState({ show: true });\n  handleModalMessage = (msg) => this.setState({ modalMessage: msg });\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n\n    const { user, showSidebar } = this.state;\n\n    return (\n      <LoginContext.Provider value={{\n        onHandleShow: this.handleShow,\n        show: this.state.show,\n        onHandleClose: this.handleClose,\n        user: this.state.user,\n        handleModalMessage: this.handleModalMessage,\n        modalMessage: this.state.modalMessage\n      }}>\n        <ToastContainer />\n        <LoginModal />\n        {/* <SidebarMenu showSidebar={showSidebar} /> */}\n        <NavBar user={user} toggleSidebar={this.toggleSidebar} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            {/* <Route path=\"/login\" component={LoginForm} /> */}\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/reset-password\" component={ResetPassword} />\n            <Route path=\"/reset-password-change\" component={ResetPasswordChange} />\n            <Route path=\"/callback\" component={OauthCallback} />\n            <ProtectedRoute\n              path=\"/groupForm/:id\"\n              component={GroupForm}\n            />\n            <ProtectedRoute path=\"/groups/:groupId/tasks/:taskId\"\n              render={props => <Task {...props} user={this.state.user} />} />\n            <ProtectedRoute path=\"/groups/:id\" component={GroupTabs} />\n            <ProtectedRoute path=\"/groups\"\n              render={props => <Groups {...props} user={this.state.user} />} />\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect exact from=\"/\" to=\"/groups\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n        <Footer />\n      </LoginContext.Provider>\n\n);\n}\n}\n\nexport default App;\n","/home/abdullahj/full_stack/taskroom/src/reportWebVitals.js",[],"/home/abdullahj/full_stack/taskroom/src/services/authService.js",["259"],"import jwtDecode from 'jwt-decode';\nimport httpService from \"./httpService\";\n\nconst apiEndPoint = \"auth\";\nconst tokenKey = \"token\";\n\nhttpService.setJwt(getJwt());\n\nexport async function login(data) {\n\n    // let instance = httpService.create();\n    // delete instance.defaults.headers.common['Authorization'];\n\n    const { data: jwt } = await httpService.post(`${apiEndPoint}/login`, data);\n    localStorage.setItem(tokenKey, jwt);\n\n    // instance.defaults.headers.common['Authorization'] = jwt.jwt;\n\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n    } catch (error) {\n        return null\n    }\n}\n\nexport function resetPasswordSendMail(email) {\n    return httpService.post(`users/reset-password`, email);\n}\n\nexport function resetPassword(password, token) {\n    return httpService.post(`users/reset-password-change`, { password }, { params: { token } });\n}\n\nexport function getJwt() {\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    loginWithJwt,\n    logout,\n    getCurrentUser,\n    getJwt\n}","/home/abdullahj/full_stack/taskroom/src/contexts/loginContext.js",[],"/home/abdullahj/full_stack/taskroom/src/components/common/protectedRoute.jsx",[],"/home/abdullahj/full_stack/taskroom/src/services/httpService.js",["260"],"import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n    if (!expectedError) {\n\n        logger.log(error);\n        toast.error(\"An unexpected error occurred\");\n    }\n    return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n\n    axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    head: axios.head,\n    setJwt\n}","/home/abdullahj/full_stack/taskroom/src/services/userService.js",["261"],"import { getJwt } from './authService';\nimport http from './httpService';\nconst apiEndPoint = \"/users/register\";\n\nexport function register(user) {\n    return http.post(apiEndPoint, user);\n}\n\nfunction userUrl(id) {\n    return `/users/${id}`;\n}\n\nexport function getUser(id) {\n    return http.get(userUrl(id));\n}\n\nexport function getLoggedUser(){\n    return http.get('/users/me');\n}\n\nexport function getAllUsers() {\n    return http.get(\"/users\");\n}\n\nexport function deleteUser(id) {\n    return http.delete(userUrl(id));\n}\n\nexport function updateUser(id, user) {\n    return http.put(userUrl(id), user);\n}\n\nexport function getDefaultAvatar({ target }) {\n    target.src = `${process.env.REACT_APP_S3_URL}default/images/user_avatar.jpg`;\n}\n\nexport function getAvatar(userId) {\n    return `${process.env.REACT_APP_S3_URL}users/${userId}/${userId}.jpg`;\n}","/home/abdullahj/full_stack/taskroom/src/services/groupService.js",[],"/home/abdullahj/full_stack/taskroom/src/utils/paginate.js",[],"/home/abdullahj/full_stack/taskroom/src/components/common/form.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/common/pagination.jsx",["262"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\"; // lodash is optimized version of javascript library called underscore\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link mt-4\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\n// helps in documentation\n// to check bugs related to type checking\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","/home/abdullahj/full_stack/taskroom/src/components/common/searchBox.jsx",[],"/home/abdullahj/full_stack/taskroom/src/services/logService.js",["263"],"// import * as Sentry from \"@sentry/react\";\n// import { Integrations } from \"@sentry/tracing\";\n\nfunction init() {\n    // Sentry.init({\n    //     dsn: \"https://c02d701416d44956a7e0e4f37e78b6a2@o510633.ingest.sentry.io/5606575\",\n    //     autoSessionTracking: true,\n    //     integrations: [\n    //         new Integrations.BrowserTracing(),\n    //     ],\n    //     // We recommend adjusting this value in production, or using tracesSampler\n    //     // for finer control\n    //     tracesSampleRate: 1.0,\n    // });\n}\n\nfunction log(error) {\n    console.log(error);\n    // Sentry.captureException(error);\n}\n\nexport default {\n    init,\n    log\n};","/home/abdullahj/full_stack/taskroom/src/components/common/input.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/common/select.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/common/table.jsx",[],["264","265"],"/home/abdullahj/full_stack/taskroom/src/components/common/tableHeader.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/common/tableBody.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/common/list.jsx",[],["266","267"],"/home/abdullahj/full_stack/taskroom/src/components/footer.jsx",["268"],"import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <></>\n    // <Navbar bg=\"info mb-0 mt-4 sticky-bottom\">\n    //   <Navbar.Brand href=\"#home\">TaskRoom</Navbar.Brand>\n    // </Navbar>\n  );\n};\n\nexport default Footer;\n","/home/abdullahj/full_stack/taskroom/src/services/taskService.js",["269"],"import { getJwt } from './authService';\nimport http from './httpService';\n\nconst apiEndPoint = '/tasks';\n\nfunction taskUrl(id) {\n    return `${apiEndPoint}/${id}`;\n}\n\nexport function getTasks(groupId) {\n    return http.get(apiEndPoint, { params: { groupId } });\n}\n\nexport function getTask(taskId, groupId) {\n    return http.get(taskUrl(taskId), { params: { groupId } });\n}\n\nexport function postTask(groupId, task) {\n\n    return http.post(apiEndPoint, task, { params: { groupId } });\n}\n\nexport function deleteTask(id) {\n    return http.delete(taskUrl(id));\n}\n\nexport function updateTask(taskId, groupId, task) {\n    return http.put(taskUrl(taskId), task, { params: { groupId } });\n}\n\nexport function uploadFile(taskId, groupId, file) {\n    return http.post('/files', file, { params: { taskId, groupId } });\n}\n\nexport function deleteFile(fileId, taskId, groupId) {\n    return http.delete(`/files/${fileId}`, { params: { taskId, groupId } });\n}","/home/abdullahj/full_stack/taskroom/src/services/commentService.js",["270"],"import http from './httpService';\nimport { getJwt } from './authService';\n\nconst apiEndPoint = \"/comments\";\n\nexport function getComments({ taskId, groupId, parentId = -1 }) {\n    return http.get(apiEndPoint, { params: { parentId, taskId, groupId } });\n}\n\nexport function postComment({ message, taskId, parentId, groupId }) {\n    console.log(message);\n    return http.post(apiEndPoint, { message }, { params: { parentId, taskId, groupId } });\n}\n","/home/abdullahj/full_stack/taskroom/src/components/loadingScreen.jsx",["271","272","273","274"],"import React from \"react\";\nimport { Spinner, Container, Row, Col } from \"react-bootstrap\";\n\nconst LoadingScreen = () => {\n  return (\n    <div className=\"d-flex justify-content-center mt-4\">\n      <div className=\"spinner-grow text-light mt-4 mb-4\" role=\"status\">\n        <i\n          class=\"fa fa-thumb-tack fa-5x text-info mb-4 mr-4\"\n          aria-hidden=\"true\"\n        ></i>\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","/home/abdullahj/full_stack/taskroom/src/components/auth/loginModal.jsx",["275","276","277"],"import React, { Component } from \"react\";\nimport {\n  Modal,\n  Button,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n} from \"react-bootstrap\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport auth from \"../../services/authService\";\nimport LoginContext from \"../../contexts/loginContext\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Oauth from \"../common/oauth\";\n\nclass LoginModal extends Form {\n  state = {\n    data: { email: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().required().label(\"email\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    let response;\n    try {\n      const { data } = this.state;\n      await auth.login(data);\n      window.location = \"/groups\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.email = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  renderWarning = (context) => {\n    if (context.modalMessage)\n      return <Alert variant={\"warning\"}>{context.modalMessage}</Alert>;\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    const { loginMessage } = this.state;\n\n    return (\n      <LoginContext.Consumer>\n        {(context) => (\n          <Modal show={context.show} onHide={context.onHandleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>\n                Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n              </Modal.Title>\n            </Modal.Header>\n            {context.modalMessage && (\n              <Alert variant={\"warning\"}>{context.modalMessage}</Alert>\n            )}\n            <form onSubmit={this.handleSubmit}>\n              <ModalBody>\n                {this.renderInput(\"email\", \"email\")}\n                {this.renderInput(\"password\", \"Password\", \"password\")}\n                <Link onClick={context.onHandleClose} to=\"/reset-password\">\n                  Forgot Password ?\n                </Link>\n                {/* <Link onClick={context.onHandleClose} to=\"/register\">\n                  Not registered ? Register here.\n                </Link> */}\n                <Oauth />\n              </ModalBody>\n              {loginMessage && <Alert variant={\"danger\"}>{loginMessage}</Alert>}\n\n              <ModalFooter>\n                <Button variant=\"secondary\" onClick={context.onHandleClose}>\n                  Close\n                </Button>\n                {this.renderButton(\"Login\")}\n              </ModalFooter>\n            </form>\n          </Modal>\n        )}\n      </LoginContext.Consumer>\n    );\n  }\n}\n\nLoginModal.contextType = LoginContext;\n\nexport default LoginModal;\n","/home/abdullahj/full_stack/taskroom/src/components/common/notFound.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/group/groups.jsx",["278","279","280","281","282","283"],"import React, { Component } from \"react\";\nimport { paginate } from \"../../utils/paginate\";\nimport _, { filter } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  deleteGroup,\n  getGroups,\n  leaveGroup,\n} from \"../../services/groupService\";\nimport { getUser } from \"../../services/userService\";\nimport Pagination from \"../common/pagination\";\nimport SearchBox from \"../common/searchBox\";\nimport GroupCard from \"./GroupCard\";\nimport authService from \"../../services/authService\";\nimport LoadingScreen from \"../loadingScreen\";\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nclass Groups extends Component {\n  state = {\n    groups: [],\n    currentPage: 1,\n    pageSize: 6,\n    searchQuery: \"\",\n    isLoading: true,\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      searchQuery,\n      groups: allgroups,\n    } = this.state;\n\n    let filtered = allgroups;\n\n    if (searchQuery)\n      filtered = allgroups.filter((g) =>\n        g.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n\n    const groups = paginate(filtered, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: groups };\n  };\n\n  async componentDidMount() {\n    // get user\n    this.setState({ isLoading: true });\n\n    const { data: groups } = await getGroups();\n    console.log(groups);\n    this.setState({ groups });\n  }\n\n  handleDelete = async (group) => {\n    const originalgroups = this.state.groups;\n\n    const groups = originalgroups.filter((g) => g._id !== group._id);\n    this.setState({ groups });\n\n    try {\n      await deleteGroup(group._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This group has already been deleted\");\n\n      this.setState({ groups: originalgroups });\n    }\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  handleLeave = async (groupId) => {\n    try {\n      await leaveGroup(groupId);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) toast.error(ex);\n    }\n  };\n\n  handleGroupDelete = async (groupId) => {\n    try {\n      const res = await deleteGroup(groupId);\n      if(res.status === 200){\n        let groups = [...this.state.groups];\n        groups = groups.filter((group) => group._id !== groupId);\n        this.setState({groups});\n      }\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) toast.error(ex);\n    }\n  };\n\n  render() {\n    const { length: count } = this.state.groups;\n    const { pageSize, currentPage, searchQuery, groups } = this.state;\n    const { user } = this.props;\n    const { totalCount, data } = this.getPageData();\n\n    if (this.state.isLoading && !groups) {\n      return <LoadingScreen />;\n    }\n\n    return (\n      <Container>\n        <div className=\"row m-1\">\n          <Link\n            to=\"/groupForm/new\"\n            className=\"btn btn-info\"\n            style={{ marginBottom: 20 }}\n          >\n            +\n          </Link>\n        </div>\n        <div className=\"row\">\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n        </div>\n        <small>\n          Dont see your teams group ? Contact your team admin to send invite\n        </small>\n        <Grid container direction=\"row\" spacing={2}>\n            {groups.map((group) => (\n                <GroupCard\n                  group={group}\n                  user={user}\n                  onDelete={this.handleGroupDelete}\n                  onLeave={this.handleLeave}\n                />\n            ))}\n        </Grid>\n        <div className=\"row\">\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Groups;\n","/home/abdullahj/full_stack/taskroom/src/components/task/task.jsx",["284","285","286","287","288","289","290","291","292","293"],"import React, { useEffect, useState, useRef} from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Container, Button, Paper, Link } from \"@material-ui/core\";\nimport { Timeline } from \"@material-ui/lab\";\nimport { getTask, updateTask, uploadFile, deleteFile } from \"../../services/taskService\";\nimport CustomizedTimeline from \"./timeline\";\nimport TaskCardDetailed from \"./taskCardDetailed\";\nimport LoadingScreen from \"../loadingScreen\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport CommentContainer from \"../comment/commentContainer\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport moment from \"moment\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport Input from \"@material-ui/core/Input\";\nimport { MenuItem } from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\n\nexport default function Task(props) {\n  const { groupId, taskId } = props.match.params;\n\n  const [task, setTask] = useState(null);\n\n  const fetchTask = async () => {\n    const { data: task } = await getTask(taskId, groupId);\n    setTask(task);\n  };\n\n  useEffect(() => {\n    fetchTask();\n  }, []);\n\n  const handlePost = (newTask) => {\n    setTask(newTask);\n  };\n\n  const handleStatusChange = async (action) => {\n    const { title, description, dueTime, status } = task;\n    let updatedTask;\n\n    if (!dueTime) updatedTask = { title, description, status, action };\n    else updatedTask = { title, description, status, dueTime, action };\n\n    const { data: newTask } = await updateTask(\n      task._id,\n      task.groupId,\n      updatedTask\n    );\n    setTask(newTask);\n  };\n\n  if (!task) return <LoadingScreen />;\n\n  return (\n    <Container>\n      <Grid\n        item\n        container\n        direction=\"row\"\n        style={{ marginTop: 20 }}\n        spacing={1}\n      >\n        <Grid item container direction=\"column\" xs={12} sm={7} spacing={1}>\n          <Grid item>\n            <TaskCardDetailed\n              task={task}\n              onStatusChange={handleStatusChange}\n              onPost={handlePost}\n            />\n          </Grid>\n          <Grid item>\n            <CommentContainer\n              taskId={task._id}\n              groupId={task.groupId}\n              {...props}\n              theme=\"primary\"\n            />\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={5}>\n          <Grid item container>\n            <Files taskFiles={task.files} props={props} />\n          </Grid>\n          <Grid item container>\n            <CustomizedTimeline timeline={task.timeline} />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    // justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    padding: \"6px 8px\",\n    margin: theme.spacing(1),\n    width: 400\n  },\n  gridList: {\n    height: 200,\n  },\n}));\n\nfunction Files({ taskFiles, props }) {\n\n  const {taskId, groupId} = props.match.params;\n  const classes = useStyles();\n  let [files, setFiles] = useState(taskFiles);\n  let uploadRef = useRef(null);\n\n  const handleFileUpload = async(file) =>{\n\n    const formData = new FormData();\n    formData.append('file', file);\n    const {data: newFile} = await uploadFile(taskId, groupId, formData);\n    files = [...files, newFile];\n    setFiles(files);\n  }\n\n  const handleDelete = async(fileId) => {\n\n      await deleteFile(fileId, taskId, groupId);\n      const newFiles = files.filter((file) => file._id !== fileId);\n      setFiles(newFiles);\n  }\n\n  return (\n    <Paper elevation={1} className={classes.paper} maxWidth>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Grid\n          item\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n        >\n          <Grid item secondary={\"Secondary text\"}>\n            <FolderIcon fontSize=\"small\" />\n            {\" Files\"}\n          </Grid>\n          <Grid item secondary={\"Secondary text\"}>\n            <Input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              inputRef={uploadRef}\n              onChange={(e) => handleFileUpload(e.target.files[0])}\n            />\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<CloudUploadIcon />}\n              onClick={() => uploadRef.current.click()}\n            >\n              Upload\n            </Button>\n          </Grid>\n        </Grid>\n          <hr />\n        <Grid item>\n          {/* <div //className={classes.root}\n          > */}\n            <GridList cellHeight={67} className={classes.gridList} cols={3}>\n              {\n                files.map((file) => (\n                  <GridListTile cols={3}>\n                    <File file={file} key={file._id} onDelete={handleDelete} />\n                  </GridListTile>\n                ))}\n            </GridList>\n          {/* </div> */}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nfunction File({ file, onDelete }) {\n\n  const [anchor, setAnchor] = React.useState(null);\n  const menuOpen = Boolean(anchor);\n\n  const handleMenu = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n  return (\n    <ListItem key={file._id}>\n      <ListItemAvatar>\n        <Avatar>\n          <FolderIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={<a href={file.location}>{file.name}</a>}\n        secondary={\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <small>{file.owner.name}</small>\n            <FiberManualRecordIcon style={{ fontSize: 5, margin: 2 }} />\n            <small>uploaded {moment(file.uploadDate).fromNow()}</small>\n            <FiberManualRecordIcon style={{ fontSize: 5, margin: 2 }} />\n            {/* <small>{file.size} MB</small> */}\n          </Grid>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"settings\"\n          aria-haspopup=\"true\"\n          onClick={handleMenu}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"settings\"\n          anchorEl={anchor}\n          open={menuOpen}\n          keepMounted\n          onClose={handleClose}\n        >\n          <MenuItem>View</MenuItem>\n          <MenuItem onClick={() => onDelete(file._id)}>\n            Delete\n            <DeleteIcon />\n          </MenuItem>\n        </Menu>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}","/home/abdullahj/full_stack/taskroom/src/components/group/groupForm.jsx",["294"],"import React, { Component } from \"react\";\nimport Form from \"../common/form\";\nimport { saveGroup, getGroup, updateGroup } from \"../../services/groupService\";\nimport Joi from \"joi-browser\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nclass groupForm extends Form {\n  state = {\n    data: {},\n    members: [],\n    themes: [\n      \"Primary\",\n      \"Secondary\",\n      \"Success\",\n      \"Danger\",\n      \"Warning\",\n      \"Info\",\n      \"Light\",\n      \"Dark\",\n    ],\n    errors: {},\n    email: \"\",\n  };\n\n  schema = {\n    title: Joi.string().required().label(\"Title\"),\n    theme: Joi.string().required().label(\"Theme\"),\n    description: Joi.string().required().label(\"Description\"),\n  };\n\n  async populateGroup() {\n    try {\n      const GroupId = this.props.match.params.id;\n      if (GroupId === \"new\") return;\n      const { data: Group } = await getGroup(GroupId);\n      this.mapToViewModel(Group);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  mapToViewModel({ title, description, theme, members }) {\n    const data = { title, description, theme };\n    const emails = members.map((member) => member.email);\n    this.setState({ data, members: emails });\n  }\n\n  componentDidMount = async () => {\n    this.populateGroup();\n  };\n\n  doSubmit = async () => {\n    const { title, description, theme } = this.state.data;\n    let { members } = this.state;\n\n    if (this.props.match.params.id === \"new\") {\n      await saveGroup(title, description, theme, members);\n    } else {\n      await updateGroup(\n        title,\n        description,\n        theme,\n        members,\n        this.props.match.params.id\n      );\n    }\n    this.props.history.replace(\"/groups\");\n  };\n\n  handleUserDelete = (user) => {\n    console.log(\"deleted\");\n    console.log(this.state.members);\n    const members = this.state.members.filter((member) => member !== user);\n    console.log(members);\n    this.setState({ members });\n  };\n\n  handleUserEmail = (event) => {\n    if (event.key === \"Enter\") {\n      const members = [...this.state.members, this.state.email];\n      const email = \"\";\n      this.setState({ members, email });\n    }\n  };\n\n  handleEmailChange = (event) => {\n    // console.log(event.target.value.last);\n    const { email } = this.state;\n    if (event.target.value[email.length] === \" \") {\n      const members = [...this.state.members, this.state.email];\n      const email = \"\";\n      this.setState({ members, email });\n    }\n    // if (event.target.value[email.length] !== \"Enter\" && event.key !== \"Enter\")\n    else this.setState({ email: event.target.value });\n  };\n\n  render() {\n    const { themes, members } = this.state;\n    return (\n      <Container >\n        <Grid container direction=\"column\" justify=\"space-around\">\n          <form onSubmit={this.handleSubmit}>\n            <Grid item xs={12}>\n              {this.renderInput(\"title\", \"title\", \"text\")}\n            </Grid>\n\n            <Grid item xs={12}>\n              {this.renderInput(\"description\", \"description\", \"text area\")}\n            </Grid>\n            <Grid item xs={12}>\n              {this.renderSelect(\"theme\", \"theme\", themes)}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"standard-textarea\"\n                label=\"Member Emails\"\n                placeholder=\"space separated emails\"\n                multiline\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                fullWidth={true}\n                margin=\"normal\"\n                // onKeyDown={this.handleUserEmail}\n              />\n            </Grid>\n            <Grid item container direction=\"row\">\n              <ChipList members={members} onDelete={this.handleUserDelete} />\n            </Grid>\n\n            <Grid item xs={12}>\n              {this.renderButton(\" Submit \")}\n            </Grid>\n          </form>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nfunction ChipList({ members, onDelete }) {\n  return members.map((member) => (\n    <Grid item sm={2} xs={12}>\n      <Chip\n        icon={<FaceIcon />}\n        label={member}\n        onDelete={() => onDelete(member)}\n      />\n    </Grid>\n  ));\n}\n\nexport default groupForm;\n","/home/abdullahj/full_stack/taskroom/src/components/group/groupView.jsx",["295","296","297","298","299","300","301"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GroupHeader from \"./groupHeader\";\nimport Tasks from \"../task/tasks\";\nimport LoginContext from \"../../contexts/loginContext\";\nimport LoadingScreen from \"../loadingScreen\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function GroupView({ props, group }) {\n  const { user } = useContext(LoginContext);\n\n  return (\n    <Container>\n      <Grid container direction=\"column\" spacing={2}>\n        <Grid\n          item\n          container\n          direction=\"row\"\n          spacing={2}\n          style={{ marginTop: 20 }}\n        >\n          <Grid item xs={12} sm={8}>\n            <GroupHeader user={user} group={group} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            project status\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/auth/resetPassword.jsx",["302"],"import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as authService from \"../../services/authService\";\nimport Alert from \"react-bootstrap/Alert\";\n\nclass ResetPassword extends Form {\n  state = {\n    data: { email: \"\" },\n    errors: {},\n    responseMessage: \"\",\n  };\n\n  schema = {\n    email: Joi.string().required().label(\"Email\"),\n  };\n\n  renderResponse = () => {\n    if (!this.state.responseMessage) return <></>;\n    return <Alert variant={\"success\"}>{this.state.responseMessage}</Alert>;\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data: responseMessage } = await authService.resetPasswordSendMail(\n        this.state.data\n      );\n      this.setState({ responseMessage });\n    } catch (ex) {\n      if (ex.response) {\n        const errors = { ...this.state.errors };\n        errors.email = ex.response.data;\n        this.setState({ errors });\n      }\n      return;\n    }\n    this.setState({});\n  };\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm col-12\"></div>\n        <div className=\"col-sm col-12\">\n          <h3>Reset Password</h3>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"email\", \"Email\")}\n            {this.renderResponse()}\n            {this.renderButton(\"Reset Password\")}\n          </form>\n        </div>\n        <div className=\"col-sm col-12\"></div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n","/home/abdullahj/full_stack/taskroom/src/components/auth/logout.jsx",["303"],"import React, { Component } from \"react\";\nimport auth from \"../../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","/home/abdullahj/full_stack/taskroom/src/components/auth/resetPasswordChange.jsx",["304"],"import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as authService from \"../../services/authService\";\nimport Alert from \"react-bootstrap/Alert\";\nimport queryString from \"query-string\";\n\nclass ResetPasswordChange extends Form {\n  state = {\n    data: { password: \"\", confirm_password: \"\" },\n    errors: {},\n    response: \"\",\n  };\n\n  schema = {\n    password: Joi.string().required().label(\"password\").min(8),\n    confirm_password: Joi.any()\n      .valid(Joi.ref(\"password\"))\n      .required()\n      .options({ language: { any: { allowOnly: \"must match password\" } } }),\n  };\n\n  renderResponse = () => {\n    if (!this.state.response) return <></>;\n    if (!this.state.errors)\n      return <Alert variant={\"success\"}>{this.state.response}</Alert>;\n    else return <Alert variant={\"danger\"}>{this.state.response}</Alert>;\n  };\n\n  doSubmit = async () => {\n    const params = queryString.parse(this.props.location.search);\n\n    try {\n      const response = await authService.resetPassword(\n        this.state.data.password,\n        params.token\n      );\n      console.log(response);\n      if (response.status === 200) {\n        authService.loginWithJwt(response.data);\n        window.location = \"/groups\";\n      } else this.setState({ response: response.data });\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      errors.password = ex.data;\n      this.setState({ errors });\n      return;\n    }\n    this.setState({});\n  };\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm col-12\"></div>\n        <div className=\"col-sm col-12\">\n          <h3>Reset Password</h3>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInput(\"password\", \"New Password\", \"password\")}\n            {this.renderInput(\n              \"confirm_password\",\n              \"Retype New password\",\n              \"password\"\n            )}\n            {this.renderResponse()}\n            {this.renderButton(\"Reset Password\")}\n          </form>\n        </div>\n        <div className=\"col-sm col-12\"></div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPasswordChange;\n","/home/abdullahj/full_stack/taskroom/src/components/auth/registerForm.jsx",["305","306"],"import React from \"react\";\nimport Form from \"../common/form\";\nimport Joi from \"joi-browser\";\nimport auth from \"../../services/authService\";\nimport * as userService from \"../../services/userService\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Button } from \"react-bootstrap/Button\";\nimport Oauth from \"../common/oauth\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { name: \"\", password: \"\", email: \"\" },\n    errors: {},\n    nameFeedback: {},\n    responseMessage: \"\",\n  };\n\n  schema = {\n    name: Joi.string().required().label(\"Name\").min(3),\n    password: Joi.string().required().label(\"Password\").min(8),\n    email: Joi.string().required().label(\"Email\").email(),\n  };\n\n  renderResponse = () => {\n    if (!this.state.responseMessage) return <></>;\n    return <Alert variant={\"success\"}>{this.state.responseMessage}</Alert>;\n  };\n\n  doSubmit = async () => {\n    console.log(this.state.data);\n    try {\n      const { data: responseMessage } = await userService.register(\n        this.state.data\n      );\n      this.setState({ responseMessage });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.name = ex.response.data;\n        this.setState({ errors });\n      }\n      return;\n    }\n    this.setState({});\n  };\n\n  renderFeedbackClass = () => {\n    const { message, isValid } = this.state.nameFeedback;\n    if (message === null) return \"\";\n    if (isValid) return \"alert alert-success\";\n    else return \"alert alert-danger\";\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-8\"></div>\n        <form className=\"col\" onSubmit={this.handleSubmit}>\n          <h2>Register</h2>\n          {this.renderInput(\"email\", \"Email\")}\n          {this.renderInput(\"name\", \"Name\")}\n\n          {this.state.nameFeedback.message && (\n            <div className={this.renderFeedbackClass()}>\n              this.state.nameFeedback.message\n            </div>\n          )}\n\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderResponse()}\n\n          <Oauth />\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","/home/abdullahj/full_stack/taskroom/src/components/group/groupHeader.jsx",["307","308","309","310","311","312"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport { deleteGroup } from \"../../services/groupService\";\n\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    marginRight: theme.spacing(2)\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  members_avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n}));\n\nfunction SimpleDialog({ onClose, selectedValue, open, members }) {\n  const classes = useStyles();\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Group Members</DialogTitle>\n      <List>\n        {members.map((member) => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(member.email)}\n            key={member.email}\n          >\n            <ListItemAvatar>\n              <Avatar alt={member.name} className={classes.members_avatar}>\n                {/* <PersonIcon /> */}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={member.name} secondary={member.email} />\n          </ListItem>\n        ))}\n\n        <ListItem\n          autoFocus\n          button\n          onClick={() => handleListItemClick(\"addAccount\")}\n        >\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add New Member\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nMembersDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nfunction MembersDialog({ members }) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      {/* <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br /> */}\n      <AvatarGroup max={3} onClick={handleClickOpen}>\n        {members.map((member) => (\n          <Avatar alt={member.name} src={member.avatar_url} />\n        ))}\n      </AvatarGroup>\n      <SimpleDialog\n        members={members}\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n}\n\nexport default function GroupCard({ group, user }) {\n  const classes = useStyles();\n  const [anchor, setAnchor] = React.useState(null);\n  const open = Boolean(anchor);\n\n  const handleDelete = async (id) => {\n    await deleteGroup(id);\n  };\n\n  const handleMenu = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        // <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //   R\n        // </Avatar>\n        // }\n        style={{ fontSize: 10 }}\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        }\n        // titleTypographyProps={{ variant: \"h6\" }}\n        title={group.title}\n        subheader={\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              {\" \"}\n              <Avatar\n                alt={group.admin.name}\n                aria-label=\"recipe\"\n                // className={classes.avatar}\n                style={{ marginRight: 5 }}\n                src={group.admin.avatar_url}\n              />\n            </Grid>{\" \"}\n            <Grid item>\n              <div>{group.admin.name}</div>\n            </Grid>\n          </Grid>\n        }\n      />\n\n      {/* <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {group.description}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <MembersDialog members={group.members} />\n\n        <Menu\n          id=\"settings\"\n          anchorEl={anchor}\n          open={open}\n          keepMounted\n          onClose={handleClose}\n        >\n          {user._id === group.admin._id && (\n            <>\n              <MenuItem onClick={handleClose}>\n                <Link to={`groupForm/${group._id}`}>Update</Link>\n              </MenuItem>\n              <MenuItem onClick={() => handleDelete(group._id)}>\n                Delete\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      </CardActions>\n    </Card>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/taskTab.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/task/tasks.jsx",["313","314","315","316","317","318","319"],"import React, { Component, useEffect, useState } from \"react\";\nimport { deleteTask, getTasks } from \"../../services/taskService\";\nimport {\n  Card,\n  Col,\n  Row,\n  Dropdown,\n  ListGroup,\n  ListGroupItem,\n  Badge,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport CommentContainer from \"../comment/commentContainer\";\n\nconst Tasks = ({ theme, tasks, user, onDelete, onPost, status }) => {\n  if (!tasks) return <div></div>;\n\n  const renderStatus = (isCompleted, dueTime) => {\n    if (isCompleted === true)\n      return <Badge variant=\"success ml-2\">completed</Badge>;\n    if (new Date(dueTime) < new Date())\n      return <Badge variant=\"danger ml-2\">Missing</Badge>;\n    else return <Badge variant=\"primary ml-2\">ToDo</Badge>;\n  };\n\n  const onComplete = (task) => {\n    task.completed = true;\n    onPost(task);\n  };\n\n  const filterTasks = () => {\n    let filteredTasks;\n    if (status === \"All Tasks\") filteredTasks = tasks;\n    else if (status === \"Completed\")\n      filteredTasks = tasks.filter((task) => task.completed === true);\n    else if (status === \"Missing\") {\n      filteredTasks = tasks.filter(\n        (task) => new Date(task.dueTime) < new Date() && task.completed !== true\n      );\n    } else if (status === \"ToDo\") {\n      filteredTasks = tasks.filter(\n        (task) => new Date(task.dueTime) > new Date() && task.completed !== true\n      );\n    }\n\n    tasks = filteredTasks;\n  };\n  filterTasks();\n\n  return (\n    <>\n      {tasks.map((task) => (\n        <Card\n          // bg={task.theme.toLowerCase()}\n          key={task._id}\n          border={theme.toLowerCase()}\n          // text={task.theme.toLowerCase() === \"light\" ? \"dark\" : \"white\"}\n          // style={{ width: \"25rem\" }}\n          className=\"m-2\"\n        >\n          <Card.Body>\n            <Card.Title class>\n              <Row>\n                {\" \"}\n                <Col md={6}>\n                  <h6>\n                    {task.title} {renderStatus(task.completed, task.dueTime)}\n                  </h6>\n                </Col>\n                <Col md={5}>\n                  <i className=\"fa fa-clock-o\" aria-hidden=\"true\">\n                    {\"  \"}\n                    Due On {(new Date(task.dueTime) + \" \").substr(0, 21)}\n                  </i>\n                </Col>\n                <Col md={{ span: 1, order: \"last\" }}>\n                  <small>\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant={theme.toLowerCase()}\n                        className=\"btn btn-sm\"\n                        id=\"dropdown-basic\"\n                      ></Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item>\n                          <Link to={\"tasks/\" + task._id}>View</Link>\n                        </Dropdown.Item>\n                        {user.name === task.author.name.name && (\n                          <>\n                            <Dropdown.Item>\n                              <Link to={`taskForm/${task._id}`}>\n                                <i\n                                  class=\"fa fa-pencil-square-o\"\n                                  aria-hidden=\"true\"\n                                ></i>{\" \"}\n                                Update\n                              </Link>\n                            </Dropdown.Item>\n\n                            <Dropdown.Item>\n                              <div onClick={() => onDelete(task._id)}>\n                                <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>{\" \"}\n                                Delete\n                              </div>\n                            </Dropdown.Item>\n\n                            <Dropdown.Item>\n                              <div onClick={() => onComplete(task)}>\n                                <i\n                                  class=\"fa fa-check-circle-o\"\n                                  aria-hidden=\"true\"\n                                ></i>{\" \"}\n                                Mark Completed\n                              </div>\n                            </Dropdown.Item>\n                          </>\n                        )}\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </small>\n                </Col>\n              </Row>\n            </Card.Title>\n            <Link to={`/users/${task.author._id}`}>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {task.author.name}{\" \"}\n              </Card.Subtitle>\n            </Link>\n            <small className=\"text-muted\">\n              <i class=\"fa fa-clock-o\" aria-hidden=\"true\">\n                {\" \"}\n                Last Updated On{\" \"}\n                {(new Date(task.updateTime) + \" \").substr(0, 21)}\n              </i>\n            </small>\n            <Card.Text>{task.description}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <CommentContainer taskId={task._id} theme={theme} />\n          </Card.Footer>\n        </Card>\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","/home/abdullahj/full_stack/taskroom/src/components/comment/commentContainer.jsx",["320"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { Container, Divider } from \"@material-ui/core\";\nimport { getComments, postComment } from \"../../services/commentService\";\nimport Messages from \"./messages\";\nimport MessageForm from \"./messageForm\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 8px\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  avatar: {\n    backgroundColor: blue[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nexport default function CommentContainer({ taskId, groupId, user }) {\n\n  const [comments, setComments] = useState(null);\n  const classes = useStyles();\n\n  const loadComments = async () => {\n    const { data: comments } = await getComments({ taskId, groupId });\n    setComments(comments);\n  };\n\n  useEffect(() => {\n    loadComments();\n  }, []);\n\n  async function handleCommentPost(message){\n    const { data: comment } = await postComment({ taskId, groupId, message });\n    const newCommentList = [...comments, comment];\n    setComments(newCommentList);\n  };\n\n  if (!comments) return <div>Loading...</div>;\n\n  return (\n    <Paper elevation={1} className={classes.paper}>\n      <Container>\n        <Grid item container direction=\"column\" spacing={2}>\n          <Grid item container direction=\"row\" justify=\"center\">\n            Discussions\n          </Grid>\n          <Divider />\n          <Grid item>\n            <Messages messages={comments} user={user} />\n          </Grid>\n          <Divider />\n          <Grid item>\n            <MessageForm onPost={handleCommentPost} user={user} />\n          </Grid>\n        </Grid>\n      </Container>\n    </Paper>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/common/oauth.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/navBar.jsx",[],"/home/abdullahj/full_stack/taskroom/src/components/group/GroupCard.jsx",["321","322","323","324","325","326"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nexport default function GroupCard({ group, user, onDelete, onLeave }) {\n  const classes = useStyles();\n  const [anchor, setAnchor] = React.useState(null);\n  const open = Boolean(anchor);\n\n  const handleMenu = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchor(null);\n  };\n\n  return (\n    <>\n      <Grid item key={group._id} xs={12} sm={4}>\n        <Card className={classes.root}>\n          <CardHeader\n            // avatar={\n            // <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            //   R\n            // </Avatar>\n            // }\n            style={{ fontSize: 10 }}\n            action={\n              <IconButton\n                aria-label=\"settings\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n              >\n                <MoreVertIcon />\n              </IconButton>\n            }\n            titleTypographyProps={{ variant: \"h6\" }}\n            title={<Link to={\"groups/\" + group._id}>{group.title}</Link>}\n            subheader={\n              <Grid container spacing={4}>\n                <Grid item xs={1}>\n                  {\" \"}\n                  <Avatar\n                    alt={group.admin.name}\n                    aria-label=\"recipe\"\n                    className={classes.avatar}\n                    src={group.admin.avatar_url}\n                  />\n                </Grid>{\" \"}\n                <Grid item xs={10}>\n                  <Grid>{group.admin.name}</Grid>\n                </Grid>\n              </Grid>\n            }\n          />\n\n          {/* <CardMedia\n        className={classes.media}\n        image=\"/static/images/cards/paella.jpg\"\n        title=\"Paella dish\"\n      /> */}\n          {/* <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This impressive paella is a perfect party dish and a fun meal to cook together with your\n          guests. Add 1 cup of frozen peas along with the mussels, if you like.\n        </Typography>\n      </CardContent> */}\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\">\n              <FavoriteIcon />\n            </IconButton>\n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n            <Menu\n              id=\"settings\"\n              anchorEl={anchor}\n              open={open}\n              keepMounted\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose}>\n                <Link to={\"groups/\" + group._id}>View</Link>\n              </MenuItem>\n              {user._id === group.admin._id && (\n                <>\n                  <MenuItem onClick={handleClose}>\n                    <Link to={`groupForm/${group._id}`}>Update</Link>\n                  </MenuItem>\n                  <MenuItem onClick={() => onDelete(group._id)}>\n                    Delete\n                  </MenuItem>\n                </>\n              )}\n              {user._id !== group.admin._id && (\n                <MenuItem onClick={() => onLeave(group._id)}>Unenroll</MenuItem>\n              )}\n            </Menu>\n          </CardActions>\n        </Card>\n      </Grid>\n    </>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/profile/profileDialog.jsx",["327","328","329","330","331","332","333","334","335"],"import React, {useContext, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Fab from '@material-ui/core/Fab';\nimport LockIcon from '@material-ui/icons/Lock';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport { useForm, Controller } from \"react-hook-form\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nimport Joi from 'joi';\nimport { updateUser, getLoggedUser } from '../../services/userService';\nimport {getCurrentUser} from '../../services/authService';\n\nconst schema = Joi.object({\n  name: Joi.string().min(3).required()\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  avatar_large: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\n\nfunction ProfileList({}){\n\n  const classes = useStyles();\n  const [nameEdit, setNameEdit] = React.useState(false);\n  const [passwordEdit, setPasswordEdit] = React.useState(false);\n\n  const [name, setName] = React.useState(null);\n  const [user, setUser] = React.useState({});\n \n    const {register, handleSubmit, formState: { errors } } = useForm({\n    resolver: joiResolver(schema)\n  });\n\n  useEffect(() =>{\n\n      async function loadUser(){\n        const {_id} = getCurrentUser();\n        const {data} = await getLoggedUser();\n        setUser(data);\n      }\n      loadUser();\n\n  }, []);\n\n//   const currentName = watch('name');\n\n  const onSubmit = async () => {\n    setNameEdit(false);\n    const {data} = await updateUser(user._id, {name});\n    setName(data.name);\n  };\n\n  const editName = () =>{\n    setNameEdit(true);\n  }\n\n  const handleName = (event) =>{\n      setName(event.target.value);\n  }\n\nconst { ref, ...rest } = register('name');\n\n    if(!user) return <div>Loading..</div>;\n\n  return (\n <List className={classes.root}>\n             \n               <Grid item container direction = \"row\" justify=\"space-between\">\n                <Grid item>\n                  <ListItem>\n                    {!nameEdit && <><ListItemAvatar>\n                      <Avatar>\n                        <PersonIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Name\" secondary={user.name} /></>}\n                    {\n                      nameEdit &&  \n                          <form onSubmit={handleSubmit(onSubmit)}>\n                            <TextField \n                            inputRef={ref} {...rest}\n                             id=\"name\"\n                              name=\"name\"\n                              value={name}\n                              size='small'\n                              style={{maxWidth: 170}}\n                              onChange={handleName}\n                              error={errors.name && 1}\n                             helperText={errors.name && errors.name.message}\n                              />\n                        </form>    \n                    }\n                  </ListItem>\n                </Grid>\n                <Grid item>\n                {!nameEdit && (<IconButton onClick={editName}>\n                  <EditIcon />\n                </IconButton>)}\n                {nameEdit && (\n                <IconButton onClick={() => handleSubmit(onSubmit)()} >\n                  <SaveIcon />\n                </IconButton>)\n                }\n                </Grid>\n              </Grid>\n\n              <Grid item container direction = \"row\" justify=\"space-between\">\n                <Grid item>\n                  <ListItem>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <LockIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Password\" secondary=\"*******\" />\n                  </ListItem>\n                </Grid>\n                <Grid item>\n                <IconButton>\n                  <EditIcon />\n                </IconButton>\n                </Grid>\n              </Grid>\n\n              <Grid item container direction = \"row\" justify=\"space-between\">\n                <Grid item>\n                  <ListItem>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <EmailIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"E-mail address\"\n                      secondary={user.email}\n                    />\n                  </ListItem>\n                </Grid>\n                <Grid item>\n                <IconButton>\n                  <EditIcon />\n                </IconButton>\n                </Grid>\n              </Grid>\n              </List>\n  );\n}\n\nexport default function ProfileDialog({open, handleClose}) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"sm\"\n      >\n        <IconButton onClick={handleClose} className={classes.closeButton}>\n          <CloseIcon />\n        </IconButton>\n\n        <Container>\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n            <Grid item xs={6}>\n              <DialogTitle id=\"form-dialog-title\">Account</DialogTitle>\n            </Grid>\n            <Grid item xs={6}>\n              <Avatar\n                alt=\"Abdullah Jamal\"\n                src=\"/static/images/avatar/1.jpg\"\n                className={classes.avatar_large}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                startIcon={<ImageIcon />}\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                margin=\"medium\"\n              >\n                Choose..\n              </Button>\n            </Grid>\n            <Grid item container direction=\"column\">\n              <ProfileList />\n            </Grid>\n\n          </Grid>\n\n        </Container>\n\n        <DialogContent>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          /> */}\n        </DialogContent>\n\n        {/* <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions> */}\n      </Dialog>\n    </>\n  );\n}","/home/abdullahj/full_stack/taskroom/src/components/auth/callback.jsx",["336","337"],"import React, { useEffect } from \"react\";\nimport httpService from \"../../services/httpService\";\nimport { loginWithJwt } from \"../../services/authService\";\nimport queryString from \"query-string\";\n\nexport default function OauthCallBack(props) {\n  useEffect(() => {\n    async function getCurrentHeaders() {\n      const params = queryString.parse(props.location.search);\n      console.log(params.token);\n      loginWithJwt(params.token);\n      document.location = \"/\";\n    }\n    getCurrentHeaders();\n  }, []);\n\n  return <div></div>;\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/taskColumns.jsx",["338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TaskFormDialog from \"./taskForm\";\nimport TaskCard from \"./taskCard\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    minHeight: 300,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nexport default function TaskColumns({ label, color, actions, tasks }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [task, setTasks] = React.useState(tasks);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handlePost = (newTask) => {\n    const postedTask = [...task, newTask];\n    setTasks(postedTask);\n  };\n\n  return (\n    <>\n      <TaskFormDialog open={open} onClose={handleClose} onPost={handlePost} />\n      <Card className={classes.root} style={{ backgroundColor: color }}>\n        <CardHeader\n          style={{ fontSize: 10 }}\n          action={\n            actions && (\n              <Fab\n                color=\"primary\"\n                aria-label={label}\n                onClick={() => handleOpen()}\n                size=\"small\"\n              >\n                <AddIcon />\n              </Fab>\n            )\n          }\n          titleTypographyProps={{ variant: \"h6\" }}\n          title={\n            <>\n              {label}\n              {\n                <Chip\n                  style={{ marginLeft: 5 }}\n                  label={task.length}\n                  color=\"secondary\"\n                  size=\"small\"\n                />\n              }\n            </>\n          }\n        />\n        <Container>\n          <Grid item container direction=\"column\" spacing={2}>\n            {task.map((t) => (\n              <Grid item>\n                <TaskCard key={t._id} task={t} />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n        {/* <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to\n            cook together with your guests. Add 1 cup of frozen peas along with\n            the mussels, if you like.\n          </Typography>\n        </CardContent> */}\n      </Card>\n    </>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/taskForm.jsx",["352","353","354","355","356","357","358","359","360"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { postTask, updateTask } from \"../../services/taskService\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { createBrowserHistory } from \"history\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  avatar_large: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  textField: {\n    width: 270,\n  },\n}));\n\nconst colors = [\n  { bg: \"white\", textColor: \"black\" },\n  { bg: \"red\", textColor: \"white\" },\n  { bg: \"pink\", textColor: \"white\" },\n  { bg: \"purple\", textColor: \"white\" },\n  // {bg: \"deepPurple\", textColor: \"white\"},\n  { bg: \"indigo\", textColor: \"white\" },\n  { bg: \"blue\", textColor: \"white\" },\n  // {bg: \"deepOrange\", textColor: \"white\"},\n  { bg: \"lightBlue\", textColor: \"black\" },\n  { bg: \"cyan\", textColor: \"black\" },\n  { bg: \"teal\", textColor: \"black\" },\n  { bg: \"green\", textColor: \"black\" },\n  { bg: \"lightGreen\", textColor: \"black\" },\n  { bg: \"lime\", textColor: \"black\" },\n  { bg: \"yellow\", textColor: \"black\" },\n  // {bg: \"amber\", textColor: \"black\"},\n  { bg: \"orange\", textColor: \"black\" },\n];\n\nexport default function TaskFormDialog(props) {\n  const classes = useStyles();\n  const { open, onClose, onPost } = props;\n\n  return (\n    <>\n      <Dialog open={open} onClose={onClose} maxWidth=\"md\">\n        <IconButton onClick={onClose} className={classes.closeButton}>\n          <CloseIcon />\n        </IconButton>\n\n        <DialogTitle id=\"form-dialog-title\">Task Form</DialogTitle>\n        <TaskForm {...props} />\n      </Dialog>\n    </>\n  );\n}\n\nfunction TaskForm({ onPost, onClose, task: taskProp }) {\n  const classes = useStyles();\n  let [dueTime, setDueDate] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [color, setColor] = useState(colors[0]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (taskProp) {\n      setDueDate(taskProp.dueDate);\n      setTitle(taskProp.title);\n      setTags(taskProp.tags);\n      setDescription(taskProp.description);\n    }\n  }, []);\n\n  const onSubmit = async () => {\n    const history = createBrowserHistory();\n    const groupId = history.location.pathname.toString().split(\"/\")[2];\n    // dueTime += \":00.000Z\";\n    let task = { title, description };\n    if (dueTime) task.dueTime = dueTime;\n    if (tags) task.tags = tags.toString().split(\",\");\n\n    try {\n      let newTask;\n\n      if (taskProp) {\n        task.status = taskProp.status;\n        const { data } = await updateTask(taskProp._id, groupId, task);\n        newTask = data;\n      } else {\n        const { data } = await postTask(groupId, task);\n        newTask = data;\n      }\n      onPost(newTask);\n      onClose();\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setError(ex.response.data);\n      }\n    }\n  };\n  return (\n    <Container>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item>\n          <TextField\n            id=\"date\"\n            label=\"Due Date\"\n            type=\"date\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            helperText={error && error}\n            error={error}\n            value={dueTime}\n            onChange={(event) => setDueDate(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            extended\n            id=\"standard-helperText\"\n            label=\"Title\"\n            helperText={error && error}\n            error={error}\n            className={classes.textField}\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            extended\n            multiline\n            variant=\"outlined\"\n            id=\"standard-helperText\"\n            label=\"Tags\"\n            helperText={(error && error) || \"enter , seperated tags\"}\n            error={error}\n            className={classes.textField}\n            value={tags}\n            onChange={(event) => setTags(event.target.value)}\n          />\n        </Grid>\n        <Grid item>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.textField}\n            style={{ backgroundColor: color.bg, color: color.textColor }}\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Theme\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={color}\n              onChange={(event) => setColor(event.target.value)}\n              label=\"Age\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {colors.map((color) => (\n                <MenuItem\n                  value={color}\n                  style={{\n                    backgroundColor: color.bg,\n                    color: color.textColor,\n                  }}\n                >\n                  {color.bg}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            multiline\n            variant=\"outlined\"\n            extended\n            id=\"standard-helperText\"\n            label=\"Description\"\n            helperText={error && error}\n            error={error}\n            className={classes.textField}\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </Grid>\n        <Grid item>{error && <Alert severity=\"error\">{error}</Alert>}</Grid>\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Button onClick={onSubmit} variant=\"contained\" color=\"success\">\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n",["361","362"],"/home/abdullahj/full_stack/taskroom/src/components/task/taskCard.jsx",["363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TaskForm from \"./taskForm\";\nimport Container from \"@material-ui/core/Container\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport Chip from \"@material-ui/core/Chip\";\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport moment from 'moment';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport TimelineIcons from \"@material-ui/icons/Timeline\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    marginBottom: 10,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: 5,\n  },\n}));\n\nexport default function TaskCard({ task }) {\n  const classes = useStyles();\n\n  if(!task) return <div></div>;\n\n  return (\n    <Link\n      to={`/groups/${task.groupId}/tasks/${task._id}`}\n      style={{ textDecoration: \"none\" }}\n    >\n      <Card\n        className={classes.root}\n        elevation={5}\n        style={{ backgroundColor: task.color }}\n      >\n        <CardHeader\n          // action={\n          // }\n          titleTypographyProps={{ variant: \"strong\" }}\n          title={<strong>{task.title}</strong>}\n          subheader={\n            task.dueTime && (\n              <>\n                <AccessTimeIcon fontSize=\"small\" />\n                <small>{task.dueTime}</small>\n              </>\n            )\n          }\n        />\n        <CardContent style={{ marginTop: -20 }}>\n          <Typography variant=\"body2\" component=\"p\">\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Tags tags={task.tags} />\n              </Grid>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Grid container alignItems=\"center\">\n                    <Grid item>\n                      <Avatar\n                        alt={task.author.name}\n                        aria-label=\"recipe\"\n                        className={classes.avatar}\n                        src={task.author.avatar_url}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <small>{task.author.name}</small>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <ChatBubbleOutlineIcon\n                    style={{ fontSize: 17, marginRight: 2 }}\n                  />\n                  <small>{task.commentsCount}</small>\n                </Grid>\n                {/* <Grid item>\n                  <TimelineIcons fontSize=\"small\" />{\" \"}\n                  {task.timeline.length}\n                </Grid> */}\n                <Grid item>\n                  {\n                    <small>\n                      <CalendarTodayIcon style={{ fontSize: 15 }} />\n                      {moment(task.creationTime).format(\"LLLL\").split(\",\")[1]}\n                    </small>\n                  }\n                </Grid>\n              </Grid>\n            </Grid>\n          </Typography>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n}\n\nfunction Tags({ tags }) {\n  return (\n    <Grid item container>\n      {  tags.map((tag) => (\n          <Grid item style={{margin: 5}}>\n            <Chip label={<small>{tag}</small>} color=\"primary\" size=\"small\" />\n          </Grid>\n        ))}\n    </Grid>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/timeline.jsx",["379","380","381","382"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\";\nimport LaptopMacIcon from \"@material-ui/icons/LaptopMac\";\nimport HotelIcon from \"@material-ui/icons/Hotel\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { blue } from \"@material-ui/core/colors\";\nimport moment from \"moment\";\nimport TimelineIcons from \"@material-ui/icons/Timeline\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  avatar: {\n    backgroundColor: blue[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nfunction TimelineIcon({ action }) {\n  if (action === \"created\")\n    return (\n      <TimelineDot color=\"primary\">\n        <AddIcon />\n      </TimelineDot>\n    );\n  if (action === \"updated\")\n    return (\n      <TimelineDot color=\"secondary\">\n        <EditIcon />\n      </TimelineDot>\n    );\n  if (action === \"To Do\")\n    return (\n      <TimelineDot color=\"primary\">\n        <FormatListBulletedIcon />\n      </TimelineDot>\n    );\n  if (action === \"Doing\")\n    return (\n      <TimelineDot color=\"primary\">\n        <AutorenewIcon />\n      </TimelineDot>\n    );\n  if (action === \"Done\")\n    return (\n      <TimelineDot style={{ backgroundColor: \"green\" }}>\n        <DoneIcon />\n      </TimelineDot>\n    );\n}\n\nexport default function CustomizedTimeline({ timeline }) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={1}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <h6>\n            <TimelineIcons /> Timeline\n          </h6>\n        </Grid>\n      </Grid>\n      <Timeline align=\"alternate\">\n        {timeline.map((t, index) => (\n          <TimelineItem key={index}>\n            <TimelineOppositeContent>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {moment(t.date).format(\"LLL\")}\n              </Typography>\n            </TimelineOppositeContent>\n            <TimelineSeparator>\n              <TimelineIcon action={t.action} />\n              <TimelineConnector />\n            </TimelineSeparator>\n            <TimelineContent>\n              <Paper elevation={3} className={classes.paper}>\n                <Typography variant=\"strong\" component=\"h6\">\n                  {t.action !== \"updated\" &&\n                    t.action !== \"created\" &&\n                    \"Moved to \"}\n                  {t.action}\n                </Typography>\n                <Typography variant=\"p\" component=\"small\">\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                  >\n                    <Grid item>\n                      <Avatar\n                        className={classes.avatar}\n                        src={t.user.avatar_url}\n                      >\n                        {t.user.name.substr(0, 1)}\n                      </Avatar>\n                    </Grid>\n                    <Grid item>\n                      <small style={{ marginLeft: 2 }}>{t.user.name}</small>\n                    </Grid>\n                  </Grid>\n                </Typography>\n              </Paper>\n            </TimelineContent>\n          </TimelineItem>\n        ))}\n      </Timeline>\n    </Paper>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/taskCardDetailed.jsx",["383","384","385","386","387","388","389","390","391","392","393"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Badge from \"@material-ui/core/Badge\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TaskFormDialog from \"./taskForm\";\nimport Container from \"@material-ui/core/Container\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport Chip from \"@material-ui/core/Chip\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport moment from \"moment\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    marginBottom: 10,\n    padding: \"6px 16px\",\n    marginLeft: theme.spacing(2),\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n}));\n\nexport default function TaskCardDetailed({\n  task,\n  onDelete,\n  onStatusChange,\n  onPost,\n}) {\n  const classes = useStyles();\n\n  const [anchor, setAnchor] = React.useState(null);\n  const menuOpen = Boolean(anchor);\n  const [formOpen, setFormOpen] = React.useState(false);\n\n  const handleFormOpen = () => {\n    setAnchor(null);\n    setFormOpen(true);\n  };\n\n  const handleMenu = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setFormOpen(false);\n    setAnchor(null);\n  };\n\n  if (!task) return <div></div>;\n\n  return (\n    <>\n      <TaskFormDialog\n        open={formOpen}\n        onClose={handleClose}\n        onPost={onPost}\n        task={task}\n      />\n      <Card\n        className={classes.root}\n        elevation={1}\n        style={{ backgroundColor: task.color }}\n      >\n        <CardHeader\n          // action={\n          // }\n          titleTypographyProps={{ variant: \"h6\" }}\n          title={\n            <>\n              {task.title + \" \"}\n              <Chip label={task.status} size=\"small\" />\n            </>\n          }\n          subheader={\n            task.dueTime && (\n              <>\n                <AccessTimeIcon />\n                <small>{moment(task.dueTime).format(\"LLLL\")}</small>\n              </>\n            )\n          }\n          action={\n            <IconButton\n              aria-label=\"settings\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n        />\n        <CardContent style={{ marginTop: -20 }}>\n          <Typography variant=\"body2\" component=\"p\">\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Tags tags={task.tags} />\n              </Grid>\n              <Grid item>\n                <p>{task.description}</p>\n              </Grid>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Grid container alignItems=\"center\">\n                    <Grid item style={{ marginRight: 5 }}>\n                      <Avatar\n                        alt={task.author.name}\n                        aria-label=\"recipe\"\n                        className={classes.avatar}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <small>{task.author.name}</small>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <ChatBubbleOutlineIcon\n                    fontSize=\"small\"\n                    style={{ marginRight: 2 }}\n                  />\n                  {task.commentsCount}\n                </Grid>\n                <Grid item>\n                  <AccessTimeIcon fontSize=\"small\" />\n                  {moment(task.creationTime).format(\"LLLL\")}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Typography>\n          <CardActions disableSpacing>\n            <Menu\n              id=\"settings\"\n              anchorEl={anchor}\n              open={menuOpen}\n              keepMounted\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleFormOpen}>Update</MenuItem>\n              {[\"To Do\", \"Doing\", \"Done\"].map((status) => (\n                <>\n                  {status !== task.status && (\n                    <MenuItem onClick={() => onStatusChange(status)}>\n                      Mark as {status}\n                    </MenuItem>\n                  )}\n                </>\n              ))}\n              <MenuItem onClick={() => onDelete(task._id)}>Delete</MenuItem>\n            </Menu>\n          </CardActions>\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nfunction Tags({ tags }) {\n  return (\n    <Grid item container>\n      {tags.map((tag) => (\n        <Grid item style={{ margin: 5 }}>\n          <Chip label={tag} color=\"primary\" size=\"small\" />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/group/groupTabs.jsx",["394","395","396"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GroupView from \"./groupView\";\nimport WorkFlow from \"../task/workflow\";\nimport Box from \"@material-ui/core/Box\";\nimport { getGroup } from \"../../services/groupService\";\nimport LoadingScreen from \"../loadingScreen\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: \"1px solid #e8e8e8\",\n  },\n  indicator: {\n    backgroundColor: \"#1890ff\",\n  },\n})(Tabs);\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      color: \"#40a9ff\",\n      opacity: 1,\n    },\n    \"&$selected\": {\n      color: \"#1890ff\",\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    \"&:focus\": {\n      color: \"#40a9ff\",\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 40,\n      width: \"100%\",\n      backgroundColor: \"#635ee7\",\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: \"none\",\n    color: \"#fff\",\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(1),\n    \"&:focus\": {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(3),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: \"#2e1534\",\n  },\n}));\n\nexport default function CustomizedTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"one\");\n  const [group, setGroup] = useState(null);\n\n  const loadData = async () => {\n    const groupId = props.match.params.id;\n\n    const { data: group } = await getGroup(groupId);\n    setGroup(group);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  if (!group) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <h5>{group.title}</h5>\n      <div className={classes.demo1}>\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n          <AntTab label=\"Project\" value=\"one\" />\n          <AntTab label=\"Workflows\" value=\"two\" />\n          <AntTab label=\"Files\" value=\"three\" />\n        </AntTabs>\n        <TabPanel value={value} index=\"one\">\n          <GroupView props={props} group={group} />\n        </TabPanel>\n        <TabPanel value={value} index=\"two\">\n          <WorkFlow props={props} />\n        </TabPanel>\n        <TabPanel value={value} index=\"three\">\n          Files\n        </TabPanel>\n        <Typography className={classes.padding} />\n      </div>\n      {/* <div className={classes.demo2}>\n        <StyledTabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"styled tabs example\"\n        >\n          <StyledTab label=\"Project\" value=\"one\" />\n          <StyledTab label=\"Workflows\" value=\"two\" />\n          <StyledTab label=\"Files\" value=\"three\" />\n        </StyledTabs>\n        <TabPanel value={value} index=\"one\">\n          <GroupView props={props} />\n        </TabPanel>\n        <TabPanel value={value} index=\"two\">\n          <WorkFlow props={props} />\n        </TabPanel>\n        <TabPanel value={value} index=\"three\">\n          Files\n        </TabPanel>\n        <Typography className={classes.padding} />\n      </div> */}\n    </div>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/task/workflow.jsx",["397","398","399","400"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport LoadingScreen from \"../loadingScreen\";\nimport { getTasks, deleteTask, postTask } from \"../../services/taskService\";\nimport TaskColumn from \"../task/taskColumns\";\n\nconst WorkFlow = ({ props }) => {\n  const [tasks, setTasks] = useState(null);\n  const [taskCards, setTaskCards] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  const loadData = async () => {\n    setLoading(false);\n    const groupId = props.match.params.id;\n\n    const { data: tasks } = await getTasks(groupId);\n    setTasks(tasks);\n  };\n\n  useEffect(() => {\n    if (!tasks) {\n      loadData();\n      return;\n    }\n    const taskCards = [\n      {\n        label: \"To Do\",\n        color: \"lightBlue\",\n        actions: \"addTask\",\n        onPost: \"handleTaskPost\",\n        tasks: tasks.filter((t) => t.status === \"To Do\"),\n      },\n      {\n        label: \"Doing\",\n        color: \"lightYellow\",\n        tasks: tasks.filter((t) => t.status === \"Doing\"),\n      },\n      {\n        label: \"Done\",\n        color: \"lightGreen\",\n        tasks: tasks.filter((t) => t.status === \"Done\"),\n      },\n    ];\n    setTaskCards(taskCards);\n  }, [tasks]);\n\n  if (!taskCards) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Container>\n      <Grid container direction=\"row\" spacing={2}>\n        {taskCards.map((t) => (\n          <Grid item xs={12} sm={4}>\n            <TaskColumn key={t.label} {...t} props={props} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default WorkFlow;\n","/home/abdullahj/full_stack/taskroom/src/components/drawer.jsx",["401","402","403"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 220,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function CustomDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n  });\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Projects\"].map((text, index) => (\n          <ListItem button key={text} onClick={() => history.push(\"/groups\")}>\n            <ListItemIcon>{index === 0 && <MenuIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"Project Archive\", \"Settings\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index === 0 && <ArchiveIcon />}\n              {index === 1 && <SettingsIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {[\"left\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton onClick={toggleDrawer(anchor, true)}>\n            <MenuIcon style={{ color: \"white\" }} />\n          </IconButton>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/comment/messages.jsx",["404","405","406"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Avatar, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n    margin: theme.spacing(1),\n  },\n\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  avatar: {\n    backgroundColor: blue[500],\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nexport default function Messages({ messages, user }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2} style={{ minHeight: 300 }}>\n      {messages.map((message) => (\n        <Grid\n          item\n          key={message._id}\n          container\n          direction={\n            (user._id === message.author._id && \"row-reverse\") || \"row\"\n          }\n          justify={\n            (user._id !== message.author._id && \"flex-start\") || \"flex-start\"\n          }\n          alignItems=\"baseline\"\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {message.author.name.substr(0, 1)}\n            </Avatar>\n          </Grid>\n          <Grid item>\n            <Paper\n              elevation={1}\n              className={classes.paper}\n              style={{\n                backgroundColor:\n                  (user._id === message.author._id && \"#d6ffa6\") || \"#ffea98\",\n              }}\n            >\n              <Grid container direction=\"column\">\n                <Grid item>\n                  <Typography\n                    variant=\"body2\"\n                    component=\"small\"\n                    color=\"textSecondary\"\n                  >\n                    {message.author.name}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"p\">{message.message}</Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n            <Typography\n              style={{ marginTop: -30 }}\n              variant=\"body2\"\n              component=\"small\"\n              color=\"textSecondary\"\n            >\n              {moment(message.creationTime).fromNow()}\n            </Typography>\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","/home/abdullahj/full_stack/taskroom/src/components/comment/messageForm.jsx",["407","408"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, TextField, Container } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 8px\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  avatar: {\n    backgroundColor: blue[500],\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n}));\n\nexport default function MessageForm({ onPost, user }) {\n  const [message, setMessage] = useState(null);\n  const classes = useStyles();\n\n  return (\n    <Grid item container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Grid item xs={2} sm={1}>\n        <Avatar src={user.avatar_url} className={classes.avatar} />\n      </Grid>\n      <Grid item xs={8}>\n        <TextField\n          fullWidth=\"true\"\n          required\n          multiline\n          variant=\"outlined\"\n          id=\"standard-helperText\"\n          label=\"message\"\n          //   helperText={error && error}\n          //   error={error}\n          //   className={classes.textField}\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n        />\n      </Grid>\n      <Grid item xs={2}>\n        <IconButton onClick={() => onPost(message)} color=\"primary\">\n          <SendIcon color=\"primary\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n",{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","severity":1,"message":"414","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":17},{"ruleId":"413","severity":1,"message":"417","line":44,"column":19,"nodeType":"415","messageId":"416","endLine":44,"endColumn":30},{"ruleId":"418","severity":1,"message":"419","line":50,"column":1,"nodeType":"420","endLine":56,"endColumn":2},{"ruleId":"418","severity":1,"message":"419","line":24,"column":1,"nodeType":"420","endLine":31,"endColumn":2},{"ruleId":"413","severity":1,"message":"421","line":1,"column":10,"nodeType":"415","messageId":"416","endLine":1,"endColumn":16},{"ruleId":"422","severity":1,"message":"423","line":20,"column":13,"nodeType":"424","endLine":20,"endColumn":78},{"ruleId":"418","severity":1,"message":"419","line":22,"column":1,"nodeType":"420","endLine":25,"endColumn":3},{"ruleId":"409","replacedBy":"425"},{"ruleId":"411","replacedBy":"426"},{"ruleId":"409","replacedBy":"427"},{"ruleId":"411","replacedBy":"428"},{"ruleId":"413","severity":1,"message":"429","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":16},{"ruleId":"413","severity":1,"message":"421","line":1,"column":10,"nodeType":"415","messageId":"416","endLine":1,"endColumn":16},{"ruleId":"413","severity":1,"message":"421","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":16},{"ruleId":"413","severity":1,"message":"430","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":17},{"ruleId":"413","severity":1,"message":"431","line":2,"column":19,"nodeType":"415","messageId":"416","endLine":2,"endColumn":28},{"ruleId":"413","severity":1,"message":"432","line":2,"column":30,"nodeType":"415","messageId":"416","endLine":2,"endColumn":33},{"ruleId":"413","severity":1,"message":"433","line":2,"column":35,"nodeType":"415","messageId":"416","endLine":2,"endColumn":38},{"ruleId":"413","severity":1,"message":"434","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"435","line":7,"column":3,"nodeType":"415","messageId":"416","endLine":7,"endColumn":13},{"ruleId":"413","severity":1,"message":"436","line":29,"column":9,"nodeType":"415","messageId":"416","endLine":29,"endColumn":17},{"ruleId":"413","severity":1,"message":"437","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":9},{"ruleId":"413","severity":1,"message":"438","line":3,"column":13,"nodeType":"415","messageId":"416","endLine":3,"endColumn":19},{"ruleId":"413","severity":1,"message":"439","line":11,"column":10,"nodeType":"415","messageId":"416","endLine":11,"endColumn":17},{"ruleId":"413","severity":1,"message":"440","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":19},{"ruleId":"413","severity":1,"message":"441","line":109,"column":21,"nodeType":"415","messageId":"416","endLine":109,"endColumn":26},{"ruleId":"413","severity":1,"message":"442","line":112,"column":25,"nodeType":"415","messageId":"416","endLine":112,"endColumn":29},{"ruleId":"413","severity":1,"message":"443","line":3,"column":36,"nodeType":"415","messageId":"416","endLine":3,"endColumn":40},{"ruleId":"413","severity":1,"message":"444","line":4,"column":10,"nodeType":"415","messageId":"416","endLine":4,"endColumn":18},{"ruleId":"413","severity":1,"message":"445","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":20},{"ruleId":"413","severity":1,"message":"446","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":12},{"ruleId":"413","severity":1,"message":"447","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":20},{"ruleId":"413","severity":1,"message":"448","line":20,"column":8,"nodeType":"415","messageId":"416","endLine":20,"endColumn":17},{"ruleId":"413","severity":1,"message":"449","line":21,"column":8,"nodeType":"415","messageId":"416","endLine":21,"endColumn":24},{"ruleId":"413","severity":1,"message":"450","line":22,"column":8,"nodeType":"415","messageId":"416","endLine":22,"endColumn":16},{"ruleId":"413","severity":1,"message":"451","line":23,"column":8,"nodeType":"415","messageId":"416","endLine":23,"endColumn":18},{"ruleId":"452","severity":1,"message":"453","line":51,"column":6,"nodeType":"454","endLine":51,"endColumn":8,"suggestions":"455"},{"ruleId":"413","severity":1,"message":"434","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"456","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":25},{"ruleId":"413","severity":1,"message":"457","line":1,"column":27,"nodeType":"415","messageId":"416","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"443","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":14},{"ruleId":"413","severity":1,"message":"458","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":13},{"ruleId":"413","severity":1,"message":"459","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":21},{"ruleId":"413","severity":1,"message":"460","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":13},{"ruleId":"413","severity":1,"message":"461","line":10,"column":10,"nodeType":"415","messageId":"416","endLine":10,"endColumn":20},{"ruleId":"413","severity":1,"message":"434","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"462","line":1,"column":8,"nodeType":"415","messageId":"416","endLine":1,"endColumn":13},{"ruleId":"413","severity":1,"message":"434","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"463","line":4,"column":8,"nodeType":"415","messageId":"416","endLine":4,"endColumn":12},{"ruleId":"413","severity":1,"message":"464","line":7,"column":10,"nodeType":"415","messageId":"416","endLine":7,"endColumn":16},{"ruleId":"413","severity":1,"message":"465","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":12},{"ruleId":"413","severity":1,"message":"466","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":17},{"ruleId":"413","severity":1,"message":"467","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":16},{"ruleId":"413","severity":1,"message":"468","line":16,"column":8,"nodeType":"415","messageId":"416","endLine":16,"endColumn":22},{"ruleId":"413","severity":1,"message":"464","line":26,"column":8,"nodeType":"415","messageId":"416","endLine":26,"endColumn":14},{"ruleId":"413","severity":1,"message":"469","line":33,"column":8,"nodeType":"415","messageId":"416","endLine":33,"endColumn":18},{"ruleId":"413","severity":1,"message":"434","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"457","line":1,"column":28,"nodeType":"415","messageId":"416","endLine":1,"endColumn":37},{"ruleId":"413","severity":1,"message":"456","line":1,"column":39,"nodeType":"415","messageId":"416","endLine":1,"endColumn":47},{"ruleId":"413","severity":1,"message":"470","line":2,"column":10,"nodeType":"415","messageId":"416","endLine":2,"endColumn":20},{"ruleId":"413","severity":1,"message":"471","line":2,"column":22,"nodeType":"415","messageId":"416","endLine":2,"endColumn":30},{"ruleId":"413","severity":1,"message":"472","line":8,"column":3,"nodeType":"415","messageId":"416","endLine":8,"endColumn":12},{"ruleId":"413","severity":1,"message":"473","line":9,"column":3,"nodeType":"415","messageId":"416","endLine":9,"endColumn":16},{"ruleId":"452","severity":1,"message":"474","line":36,"column":6,"nodeType":"454","endLine":36,"endColumn":8,"suggestions":"475"},{"ruleId":"413","severity":1,"message":"465","line":3,"column":8,"nodeType":"415","messageId":"416","endLine":3,"endColumn":12},{"ruleId":"413","severity":1,"message":"466","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":17},{"ruleId":"413","severity":1,"message":"476","line":7,"column":8,"nodeType":"415","messageId":"416","endLine":7,"endColumn":19},{"ruleId":"413","severity":1,"message":"467","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":16},{"ruleId":"413","severity":1,"message":"451","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":18},{"ruleId":"413","severity":1,"message":"468","line":16,"column":8,"nodeType":"415","messageId":"416","endLine":16,"endColumn":22},{"ruleId":"413","severity":1,"message":"477","line":1,"column":16,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"478","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":21},{"ruleId":"413","severity":1,"message":"479","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":25},{"ruleId":"413","severity":1,"message":"480","line":25,"column":8,"nodeType":"415","messageId":"416","endLine":25,"endColumn":11},{"ruleId":"413","severity":1,"message":"481","line":29,"column":19,"nodeType":"415","messageId":"416","endLine":29,"endColumn":29},{"ruleId":"482","severity":1,"message":"483","line":62,"column":22,"nodeType":"484","messageId":"485","endLine":62,"endColumn":24},{"ruleId":"413","severity":1,"message":"486","line":66,"column":10,"nodeType":"415","messageId":"416","endLine":66,"endColumn":22},{"ruleId":"413","severity":1,"message":"487","line":66,"column":24,"nodeType":"415","messageId":"416","endLine":66,"endColumn":39},{"ruleId":"413","severity":1,"message":"488","line":78,"column":16,"nodeType":"415","messageId":"416","endLine":78,"endColumn":19},{"ruleId":"413","severity":1,"message":"489","line":2,"column":8,"nodeType":"415","messageId":"416","endLine":2,"endColumn":19},{"ruleId":"452","severity":1,"message":"490","line":15,"column":6,"nodeType":"454","endLine":15,"endColumn":8,"suggestions":"491"},{"ruleId":"413","severity":1,"message":"466","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":17},{"ruleId":"413","severity":1,"message":"476","line":6,"column":8,"nodeType":"415","messageId":"416","endLine":6,"endColumn":19},{"ruleId":"413","severity":1,"message":"492","line":7,"column":8,"nodeType":"415","messageId":"416","endLine":7,"endColumn":19},{"ruleId":"413","severity":1,"message":"467","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"493","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":14},{"ruleId":"413","severity":1,"message":"494","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":18},{"ruleId":"413","severity":1,"message":"451","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":18},{"ruleId":"413","severity":1,"message":"495","line":13,"column":8,"nodeType":"415","messageId":"416","endLine":13,"endColumn":20},{"ruleId":"413","severity":1,"message":"496","line":14,"column":8,"nodeType":"415","messageId":"416","endLine":14,"endColumn":17},{"ruleId":"413","severity":1,"message":"468","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":22},{"ruleId":"413","severity":1,"message":"497","line":16,"column":8,"nodeType":"415","messageId":"416","endLine":16,"endColumn":20},{"ruleId":"413","severity":1,"message":"498","line":17,"column":8,"nodeType":"415","messageId":"416","endLine":17,"endColumn":16},{"ruleId":"413","severity":1,"message":"499","line":18,"column":8,"nodeType":"415","messageId":"416","endLine":18,"endColumn":12},{"ruleId":"413","severity":1,"message":"443","line":20,"column":10,"nodeType":"415","messageId":"416","endLine":20,"endColumn":14},{"ruleId":"413","severity":1,"message":"477","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":27},{"ruleId":"413","severity":1,"message":"478","line":9,"column":8,"nodeType":"415","messageId":"416","endLine":9,"endColumn":21},{"ruleId":"413","severity":1,"message":"500","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":21},{"ruleId":"413","severity":1,"message":"479","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":25},{"ruleId":"413","severity":1,"message":"493","line":13,"column":8,"nodeType":"415","messageId":"416","endLine":13,"endColumn":14},{"ruleId":"413","severity":1,"message":"501","line":14,"column":8,"nodeType":"415","messageId":"416","endLine":14,"endColumn":17},{"ruleId":"413","severity":1,"message":"502","line":23,"column":8,"nodeType":"415","messageId":"416","endLine":23,"endColumn":22},{"ruleId":"413","severity":1,"message":"503","line":79,"column":26,"nodeType":"415","messageId":"416","endLine":79,"endColumn":32},{"ruleId":"452","severity":1,"message":"504","line":111,"column":6,"nodeType":"454","endLine":111,"endColumn":8,"suggestions":"505"},{"ruleId":"409","replacedBy":"506"},{"ruleId":"411","replacedBy":"507"},{"ruleId":"413","severity":1,"message":"466","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":17},{"ruleId":"413","severity":1,"message":"492","line":7,"column":8,"nodeType":"415","messageId":"416","endLine":7,"endColumn":19},{"ruleId":"413","severity":1,"message":"467","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"508","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":13},{"ruleId":"413","severity":1,"message":"494","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":18},{"ruleId":"413","severity":1,"message":"495","line":14,"column":8,"nodeType":"415","messageId":"416","endLine":14,"endColumn":20},{"ruleId":"413","severity":1,"message":"496","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":17},{"ruleId":"413","severity":1,"message":"468","line":16,"column":8,"nodeType":"415","messageId":"416","endLine":16,"endColumn":22},{"ruleId":"413","severity":1,"message":"497","line":17,"column":8,"nodeType":"415","messageId":"416","endLine":17,"endColumn":20},{"ruleId":"413","severity":1,"message":"498","line":18,"column":8,"nodeType":"415","messageId":"416","endLine":18,"endColumn":16},{"ruleId":"413","severity":1,"message":"499","line":19,"column":8,"nodeType":"415","messageId":"416","endLine":19,"endColumn":12},{"ruleId":"413","severity":1,"message":"480","line":22,"column":8,"nodeType":"415","messageId":"416","endLine":22,"endColumn":11},{"ruleId":"413","severity":1,"message":"509","line":23,"column":8,"nodeType":"415","messageId":"416","endLine":23,"endColumn":15},{"ruleId":"413","severity":1,"message":"510","line":24,"column":8,"nodeType":"415","messageId":"416","endLine":24,"endColumn":16},{"ruleId":"413","severity":1,"message":"431","line":25,"column":8,"nodeType":"415","messageId":"416","endLine":25,"endColumn":17},{"ruleId":"413","severity":1,"message":"511","line":31,"column":8,"nodeType":"415","messageId":"416","endLine":31,"endColumn":21},{"ruleId":"413","severity":1,"message":"512","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":20},{"ruleId":"413","severity":1,"message":"513","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":21},{"ruleId":"413","severity":1,"message":"514","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":17},{"ruleId":"413","severity":1,"message":"515","line":13,"column":8,"nodeType":"415","messageId":"416","endLine":13,"endColumn":18},{"ruleId":"413","severity":1,"message":"466","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":17},{"ruleId":"413","severity":1,"message":"467","line":8,"column":8,"nodeType":"415","messageId":"416","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"508","line":10,"column":8,"nodeType":"415","messageId":"416","endLine":10,"endColumn":13},{"ruleId":"413","severity":1,"message":"495","line":14,"column":8,"nodeType":"415","messageId":"416","endLine":14,"endColumn":20},{"ruleId":"413","severity":1,"message":"496","line":15,"column":8,"nodeType":"415","messageId":"416","endLine":15,"endColumn":17},{"ruleId":"413","severity":1,"message":"468","line":16,"column":8,"nodeType":"415","messageId":"416","endLine":16,"endColumn":22},{"ruleId":"413","severity":1,"message":"443","line":21,"column":10,"nodeType":"415","messageId":"416","endLine":21,"endColumn":14},{"ruleId":"413","severity":1,"message":"480","line":22,"column":8,"nodeType":"415","messageId":"416","endLine":22,"endColumn":11},{"ruleId":"413","severity":1,"message":"509","line":23,"column":8,"nodeType":"415","messageId":"416","endLine":23,"endColumn":15},{"ruleId":"413","severity":1,"message":"431","line":25,"column":8,"nodeType":"415","messageId":"416","endLine":25,"endColumn":17},{"ruleId":"413","severity":1,"message":"516","line":30,"column":8,"nodeType":"415","messageId":"416","endLine":30,"endColumn":16},{"ruleId":"413","severity":1,"message":"517","line":74,"column":7,"nodeType":"415","messageId":"416","endLine":74,"endColumn":17},{"ruleId":"413","severity":1,"message":"518","line":87,"column":7,"nodeType":"415","messageId":"416","endLine":87,"endColumn":16},{"ruleId":"452","severity":1,"message":"519","line":129,"column":6,"nodeType":"454","endLine":129,"endColumn":8,"suggestions":"520"},{"ruleId":"413","severity":1,"message":"470","line":5,"column":20,"nodeType":"415","messageId":"416","endLine":5,"endColumn":30},{"ruleId":"413","severity":1,"message":"521","line":5,"column":32,"nodeType":"415","messageId":"416","endLine":5,"endColumn":40},{"ruleId":"413","severity":1,"message":"522","line":11,"column":10,"nodeType":"415","messageId":"416","endLine":11,"endColumn":19},{"ruleId":"452","severity":1,"message":"519","line":46,"column":6,"nodeType":"454","endLine":46,"endColumn":13,"suggestions":"523"},{"ruleId":"413","severity":1,"message":"464","line":5,"column":8,"nodeType":"415","messageId":"416","endLine":5,"endColumn":14},{"ruleId":"413","severity":1,"message":"524","line":11,"column":8,"nodeType":"415","messageId":"416","endLine":11,"endColumn":17},{"ruleId":"413","severity":1,"message":"525","line":12,"column":8,"nodeType":"415","messageId":"416","endLine":12,"endColumn":16},{"ruleId":"413","severity":1,"message":"457","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"456","line":1,"column":28,"nodeType":"415","messageId":"416","endLine":1,"endColumn":36},{"ruleId":"413","severity":1,"message":"431","line":2,"column":31,"nodeType":"415","messageId":"416","endLine":2,"endColumn":40},{"ruleId":"413","severity":1,"message":"457","line":1,"column":17,"nodeType":"415","messageId":"416","endLine":1,"endColumn":26},{"ruleId":"413","severity":1,"message":"431","line":2,"column":27,"nodeType":"415","messageId":"416","endLine":2,"endColumn":36},"no-native-reassign",["526"],"no-negated-in-lhs",["527"],"no-unused-vars","'GroupView' is defined but never used.","Identifier","unusedVar","'showSidebar' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'getJwt' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["526"],["527"],["526"],["527"],"'Navbar' is defined but never used.","'Spinner' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Component' is defined but never used.","'ModalTitle' is defined but never used.","'response' is defined but never used.","'_' is defined but never used.","'filter' is defined but never used.","'getUser' is defined but never used.","'authService' is defined but never used.","'count' is assigned a value but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'Timeline' is defined but never used.","'TimelineIcon' is defined but never used.","'List' is defined but never used.","'ListItemIcon' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTask'. Either include it or remove the dependency array.","ArrayExpression",["528"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Tasks' is defined but never used.","'LoadingScreen' is defined but never used.","'Paper' is defined but never used.","'makeStyles' is defined but never used.","'React' is defined but never used.","'auth' is defined but never used.","'Button' is defined but never used.","'clsx' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'PersonIcon' is defined but never used.","'deleteTask' is defined but never used.","'getTasks' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","React Hook useEffect has a missing dependency: 'loadComments'. Either include it or remove the dependency array.",["529"],"'CardContent' is defined but never used.","'useContext' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'Fab' is defined but never used.","'Controller' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'passwordEdit' is assigned a value but never used.","'setPasswordEdit' is assigned a value but never used.","'_id' is assigned a value but never used.","'httpService' is defined but never used.","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.",["530"],"'CardActions' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'DialogContent' is defined but never used.","'ImageIcon' is defined but never used.","'FormHelperText' is defined but never used.","'onPost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'taskProp'. Either include it or remove the dependency array.",["531"],["526"],["527"],"'Badge' is defined but never used.","'AddIcon' is defined but never used.","'TaskForm' is defined but never used.","'TimelineIcons' is defined but never used.","'FastfoodIcon' is defined but never used.","'LaptopMacIcon' is defined but never used.","'HotelIcon' is defined but never used.","'RepeatIcon' is defined but never used.","'SaveIcon' is defined but never used.","'StyledTabs' is assigned a value but never used.","'StyledTab' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["532"],"'postTask' is defined but never used.","'isLoading' is assigned a value but never used.",["533"],"'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [fetchTask]",{"range":"546","text":"547"},"Update the dependencies array to be: [loadComments]",{"range":"548","text":"549"},"Update the dependencies array to be: [props.location.search]",{"range":"550","text":"551"},"Update the dependencies array to be: [taskProp]",{"range":"552","text":"553"},"Update the dependencies array to be: [loadData]",{"range":"554","text":"555"},"Update the dependencies array to be: [loadData, tasks]",{"range":"556","text":"557"},[2166,2168],"[fetchTask]",[1023,1025],"[loadComments]",[501,503],"[props.location.search]",[3489,3491],"[taskProp]",[3031,3033],"[loadData]",[1264,1271],"[loadData, tasks]"]